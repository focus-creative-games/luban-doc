"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[773],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=d(a),c=i,h=u["".concat(p,".").concat(c)]||u[c]||s[c]||r;return a?n.createElement(h,l(l({ref:t},m),{},{components:a})):n.createElement(h,l({ref:t},m))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},3341:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=a(7462),i=(a(7294),a(3905));const r={},l=void 0,o={unversionedId:"other/changelog",id:"version-3.x/other/changelog",title:"changelog",description:"- # change log",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-3.x/other/changelog.md",sourceDirName:"other",slug:"/other/changelog",permalink:"/en/docs/3.x/other/changelog",draft:!1,tags:[],version:"3.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"roadmap",permalink:"/en/docs/3.x/other/roadmap"}},p={},d=[],m={toc:d},u="wrapper";function s(e){let{components:t,...a}=e;return(0,i.kt)(u,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("h1",{parentName:"li",id:"change-log"},"change log"),(0,i.kt)("p",{parentName:"li"},"##2022"),(0,i.kt)("h3",{parentName:"li",id:"2022726"},"2022.7.26"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added cpp's joint multi-primary key code generation support")),(0,i.kt)("h3",{parentName:"li",id:"20220719"},"2022.07.19"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added bidx, which is the index file output in binary format. Convenient and optimized on-demand loading")),(0,i.kt)("h3",{parentName:"li",id:"20220718"},"2022.07.18"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added bson export format"),(0,i.kt)("li",{parentName:"ul"},"Added support for nested containers (currently only supports c# language)")),(0,i.kt)("h3",{parentName:"li",id:"20220609"},"2022.06.09"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added export support for gdscript language")),(0,i.kt)("h3",{parentName:"li",id:"20220312"},"2022.03.12"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added data_yaml yaml export format support")),(0,i.kt)("h3",{parentName:"li",id:"20220216"},"2022.02.16"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Support externaltype mapping of vector2, 3, 4 and datetime types")),(0,i.kt)("h3",{parentName:"li",id:"20220212"},"2022.02.12"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Excel, json, xml and other data formats use field names like $type to read polymorphic type names")),(0,i.kt)("h3",{parentName:"li",id:"20220211"},"2022.02.11"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The ref of the container element type also generates the corresponding ref variable and resolve code, currently only supports c#")),(0,i.kt)("h3",{parentName:"li",id:"20220210"},"2022.02.10"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Remove automatic sep for simple native data list types like "list,int"'),(0,i.kt)("li",{parentName:"ul"},"Unify the usage of # and &, and no longer allow confusing usage due to compatibility"),(0,i.kt)("li",{parentName:"ul"},"Adjust externaltype design")),(0,i.kt)("h3",{parentName:"li",id:"20220129"},"2022.01.29"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Allow cross-module inheritance of beans! Bigger Changed Features!")),(0,i.kt)("h3",{parentName:"li",id:"20220128"},"2022.01.28"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Support for defining polymorphic types in excel format")),(0,i.kt)("h3",{parentName:"li",id:"20220126"},"2022.01.26"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"root.xml new configuration item option"),(0,i.kt)("li",{parentName:"ul"},"gen_types added code_cs_unity_editor_json"),(0,i.kt)("li",{parentName:"ul"},"enum supports empty cells to take the default value, but it is required to contain items with a value of 0")),(0,i.kt)("h3",{parentName:"li",id:"20220106"},"2022.01.06"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Path verification supports sub-resource file formats, such as Assets/Icons/GoodsIcon.spriteatlas","[10000]")),(0,i.kt)("h2",{parentName:"li",id:"2021"},"2021"),(0,i.kt)("h3",{parentName:"li",id:"20211222"},"2021.12.22"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added python27 support")),(0,i.kt)("h3",{parentName:"li",id:"20211218"},"2021.12.18"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added Unity asset format support, which can parse the target data from the asset"),(0,i.kt)("li",{parentName:"ul"},"Allows specifying parameters for catalog data sources that will be applied to all child data files"),(0,i.kt)("li",{parentName:"ul"},"Added --output:tables, --output:include_tables, --output:exclude_tables to specify to include or exclude certain tables"),(0,i.kt)("li",{parentName:"ul"},"Added convert template support")),(0,i.kt)("h3",{parentName:"li",id:"20211209"},"2021.12.09"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add ","[","xxx, xxx","]"," this matching format to identify a multi-column field, which is convenient for csv, a format that does not support cell merging, to identify multi-column fields")),(0,i.kt)("h3",{parentName:"li",id:"20211208"},"2021.12.08"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added protobuf3 schema generation and corresponding json format export")),(0,i.kt)("h3",{parentName:"li",id:"20211206"},"2021.12.06"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added msgpack export format support"),(0,i.kt)("li",{parentName:"ul"},"Added flatbuffers definition generation and corresponding json export format support (binary format is not supported temporarily, but a conversion command file is specially generated, you can use flat to convert json format to binary)")),(0,i.kt)("h3",{parentName:"li",id:"20211205"},"2021.12.05"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added refgroup support, which is convenient for the situation where many fields refer to the same group of tables"),(0,i.kt)("li",{parentName:"ul"},"Adjust sep design, move from column name to type, more flexible and unified")),(0,i.kt)("h3",{parentName:"li",id:"20211204"},"2021.12.04"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add gen_types type code_template, you can add custom template types"),(0,i.kt)("li",{parentName:"ul"},"Added parameters matching code_template --template:data:dir"),(0,i.kt)("li",{parentName:"ul"},"no longer generate empty template generation result files")),(0,i.kt)("h3",{parentName:"li",id:"20211202"},"2021.12.02"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added external enum and bean support. Great Features!")),(0,i.kt)("h3",{parentName:"li",id:"20211201"},"2021.12.01"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add table.mode='list' type, this type of table supports no primary key, combined multiple primary keys, independent multiple primary keys three modes."),(0,i.kt)("li",{parentName:"ul"},"ref is adjusted accordingly, suitable for the newly added list type table mode")),(0,i.kt)("h3",{parentName:"li",id:"20211130"},"2021.11.30"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added protobuf definition and data format export. excellent! ! !"),(0,i.kt)("li",{parentName:"ul"},"Added --disable_cache mode in Luban.Server, which disables the generated cache, which is convenient for debugging templates"),(0,i.kt)("li",{parentName:"ul"},"The excel format supports that when the list is expanded horizontally, each element specifies a multi-level header separately, which is convenient for filling in")),(0,i.kt)("h3",{parentName:"li",id:"20211122"},"2021.11.22"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added validator: set . Checks if a value is in a set.")),(0,i.kt)("h3",{parentName:"li",id:"20211120"},"2021.11.20"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Added "unchecked"Tag to instruct the validator not to check the record'),(0,i.kt)("li",{parentName:"ul"},'remove "no"Tag')),(0,i.kt)("h3",{parentName:"li",id:"20211118"},"2021.11.18"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add size validator")),(0,i.kt)("h3",{parentName:"li",id:"20211116"},"2021.11.16"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Considering that ##field is easy to write wrong, add ##var and ##var as labels for subfield lines"),(0,i.kt)("li",{parentName:"ul"},"Both lua and yaml support reading data from subfields like json")),(0,i.kt)("h3",{parentName:"li",id:"20211115"},"2021.11.15"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added datetime alias time"),(0,i.kt)("li",{parentName:"ul"},"Fix the bug that the datetime calculation is wrong due to the adjustment of TimeZone related to .net 6"),(0,i.kt)("li",{parentName:"ul"},"Luban.Server and Luban.ClientServer add --timezone parameter to specify the default time zone"),(0,i.kt)("li",{parentName:"ul"},"The json data source supports reading beans or lists and beans from json subfields (that is, the data of multiple tables can be allocated to a json file, although this is rarely done in practice), and supports using *@xxx.json to convert json as read as a list of records\ndata in the form of list, bean"),(0,i.kt)("li",{parentName:"ul"},"The type polymorphic id field name is renamed from ID to ",(0,i.kt)("strong",{parentName:"li"},"ID"),", to avoid compilation errors caused by conflicts with common field names")),(0,i.kt)("h3",{parentName:"li",id:"20211109"},"2021.11.09"),(0,i.kt)("p",{parentName:"li"},"Framework upgrade to .net 6"),(0,i.kt)("h3",{parentName:"li",id:"20211105"},"2021.11.05"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Use ClosedXml to replace the SpreedSheet library to solve the problem of convert_xlsx failure under mac"),(0,i.kt)("li",{parentName:"ul"},"Added --input_convert_data_dir, use the conversion data convert_xxxx to generate the file instead of the file specified in table.input as the data source"),(0,i.kt)("li",{parentName:"ul"},"In the file generated by convert_xlsx, records are sorted by key")),(0,i.kt)("h3",{parentName:"li",id:"2021112"},"2021.11.2"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added --generateonly option, generate but not download the result, for simple configuration validity check")),(0,i.kt)("h3",{parentName:"li",id:"2021129"},"2021.1.29"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Relax the format requirements for enum, you can fill in the integer corresponding to the enumeration value")),(0,i.kt)("h3",{parentName:"li",id:"20211028"},"2021.10.28"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Split Excel2TextDiff into a separate project ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/focus-creative-games/Excel2TextDiff"},"Excel2TextDiff"))),(0,i.kt)("h3",{parentName:"li",id:"20211027"},"2021.10.27"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Refactor the excel data source format. More clear and elegant")),(0,i.kt)("h3",{parentName:"li",id:"20211025"},"2021.10.25"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added --naming_convention_xxxx related options, you can specify the naming style for the generated code (camelCase, PascalCase, under_scores, etc.)"),(0,i.kt)("li",{parentName:"ul"},"Optimize the error message when parsing the excel format error, and give the exact error location")),(0,i.kt)("h3",{parentName:"li",id:"20211022"},"2021.10.22"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add --output_compact_json, generate compact json data"),(0,i.kt)("li",{parentName:"ul"},"Greatly optimized the loading and saving speed of LubanAssistant. (Slow as an ox to fast as lightning)")),(0,i.kt)("h3",{parentName:"li",id:"20211020"},"2021.10.20"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"LubanAssistant supports multiline lists")),(0,i.kt)("h3",{parentName:"li",id:"20211018"},"2021.10.18"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The output attribute is added to the table, and the generated file name can be specified")),(0,i.kt)("h3",{parentName:"li",id:"20211013"},"2021.10.13"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add LubanAssistant plugin")),(0,i.kt)("h3",{parentName:"li",id:"20211011"},"2021.10.11"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Removed --export_test_data and added --export_exclude_tags option, allowing more flexible filtering of export data")),(0,i.kt)("h3",{parentName:"li",id:"202191"},"2021.9.1"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added --data_file_extension option, allowing to specify the suffix of the generated data file")),(0,i.kt)("h3",{parentName:"li",id:"2021828"},"2021.8.28"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added erlang export data format")),(0,i.kt)("h3",{parentName:"li",id:"2021827"},"2021.8.27"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Support data template generation, add gen_types type data_template and corresponding matching option --template_name"),(0,i.kt)("li",{parentName:"ul"},"Add the default option of the excel field, allowing to specify the default address for the blank cell")),(0,i.kt)("h3",{parentName:"li",id:"2021826"},"2021.8.26"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add attrs attributes to most objects such as enum, bean, table, etc., to facilitate custom processing in code templates"),(0,i.kt)("li",{parentName:"ul"},"Luban.Server's command line argument -t semantics adjusted for additional template search paths. If specified, this path will be searched first, and then the default Templates path will be searched."),(0,i.kt)("li",{parentName:"ul"},"Support dynamic localization")),(0,i.kt)("h3",{parentName:"li",id:"2021825"},"2021.8.25"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added the Luban.ClientServer integrated program, which can be generated with one program without deploying Luban.Server.")),(0,i.kt)("h3",{parentName:"li",id:"2021824"},"2021.8.24"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Support code template")),(0,i.kt)("h3",{parentName:"li",id:"2021813"},"2021.8.13"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added data_json2 format. The difference from data_json is that the map of data_json is exported as [","[k1,v1]",", ...] while the map of data_json2 is exported in the format of { k1:v1, ... }")),(0,i.kt)("h3",{parentName:"li",id:"2021812"},"2021.8.12"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added yaml data source support")),(0,i.kt)("h3",{parentName:"li",id:"202189"},"2021.8.9"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Automatically disable the quick edit mode of the console under win")),(0,i.kt)("h3",{parentName:"li",id:"202184"},"2021.8.4"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Support bean definition in excel"),(0,i.kt)("li",{parentName:"ul"},"Support defining enum type in excel"),(0,i.kt)("li",{parentName:"ul"},"Optimize cfg log, no longer print scary stack information")),(0,i.kt)("h3",{parentName:"li",id:"202183"},"2021.8.3"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added --cs:use_unity_vector command line parameter to allow using UnityEngine.Vector{2,3,4} instead of System.Numerics.Vector{2,3,4}")),(0,i.kt)("h3",{parentName:"li",id:"202182"},"2021.8.2"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Solve the problem of generating different json and lua data files (line breaks) under different platforms, unified to ","\\","n"),(0,i.kt)("li",{parentName:"ul"},"Support reading Table list definition from excel. In this way, in most cases, adding a new table can be done only by modifying the excel file.")),(0,i.kt)("h3",{parentName:"li",id:"2021730"},"2021.7.30"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Support reading the definition directly from the header of the excel file, and the definition and data are integrated. Simplifies the hassle of writing record definitions")),(0,i.kt)("h3",{parentName:"li",id:"2021729"},"2021.7.29"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Solve the problem that Luban.Server and Luban.Client run error logs garbled in non-mainland areas")),(0,i.kt)("h3",{parentName:"li",id:"202178"},"2021.7.8"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added go language json data loading support (code_go_json)"),(0,i.kt)("li",{parentName:"ul"},"Fix go's support for nullable variables")),(0,i.kt)("h3",{parentName:"li",id:"2021619"},"2021.6.19"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added the Excel2TextDiff tool item, which is used to convert excel to text or directly convert two excel files to text and then diff"),(0,i.kt)("li",{parentName:"ul"},"excel, lua, xml, json support tag filtering")),(0,i.kt)("h3",{parentName:"li",id:"2021617"},"2021.6.17"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Support multi-branch data merging of main version + branch version, which is extremely useful for releasing multi-regional versions"),(0,i.kt)("li",{parentName:"ul"},"Support static localization")),(0,i.kt)("h3",{parentName:"li",id:"202158"},"2021.5.8"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Luban.Client supports the watch mechanism, which automatically regenerates after monitoring related definitions or data changes. Save iteration time.")),(0,i.kt)("h3",{parentName:"li",id:"2021412"},"2021.4.12"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Optimize the exported json data file. Unicode characters are exported as raw characters instead of \\uxxxx.")),(0,i.kt)("h3",{parentName:"li",id:"202148"},"2021.4.8"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added gen_type type data_json_monolithic: generate all json files into one file")))))}s.isMDXComponent=!0}}]);