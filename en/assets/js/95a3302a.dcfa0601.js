"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7746],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},701:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={},o="Use Polymorphic types",s={unversionedId:"beginner/usepolymorphismtype",id:"beginner/usepolymorphismtype",title:"Use Polymorphic types",description:"Not all data structures are standardized and consistent. In complex Gameplay, there are often many types of buff effects, and the fields of each type are different.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/beginner/usepolymorphismtype.md",sourceDirName:"beginner",slug:"/beginner/usepolymorphismtype",permalink:"/en/docs/beginner/usepolymorphismtype",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Use Data Validator",permalink:"/en/docs/beginner/usevalidator"},next:{title:"Automatic Table Import",permalink:"/en/docs/beginner/importtable"}},l={},p=[{value:"Definition",id:"definition",level:2},{value:"Fill in polymorphic data",id:"fill-in-polymorphic-data",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-polymorphic-types"},"Use Polymorphic types"),(0,a.kt)("p",null,"Not all data structures are standardized and consistent. In complex Gameplay, there are often many types of buff effects, and the fields of each type are different.\nIf you simply take their union, that is, take a large structure containing all types of fields, the configuration will be very bloated and complicated. Polymorphic types perfectly solve this problem."),(0,a.kt)("h2",{id:"definition"},"Definition"),(0,a.kt)("p",null,"Let's take Shape as an example. Shape has many subclasses, such as circle, triangle, and rectangle. The definition is as follows:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"item",src:n(6872).Z,width:"1197",height:"258"})),(0,a.kt)("p",null,"When a type has one or more subclasses, it is called a polymorphic type. Each subtype needs to specify the parent attribute, such as the parent of Circle is Shape."),(0,a.kt)("h2",{id:"fill-in-polymorphic-data"},"Fill in polymorphic data"),(0,a.kt)("p",null,"Polymorphic structures support streaming and sep like ordinary structures. When filling in polymorphic data, the first data must be a polymorphic type, such as Circle. Aliases are also supported when filling in polymorphic types, such as ",(0,a.kt)("inlineCode",{parentName:"p"},"Rectangle"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"item",src:n(4824).Z,width:"1024",height:"183"})),(0,a.kt)("p",null,"Supports column-limited format. In this case, you need to use the $type column to specify the polymorphic type:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"item",src:n(204).Z,width:"667",height:"193"})),(0,a.kt)("p",null,"Supports multi-line data:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"item",src:n(6259).Z,width:"985",height:"233"})))}d.isMDXComponent=!0},6872:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/define_shape-3201f1f8f4e6b276a4d3d98aaea13e4d.jpg"},4824:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/use_shape1-8a284b753c692b370a01f29edf6b0b71.jpg"},204:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/use_shape2-1e1fd19702aa455d20677bc748b5474e.jpg"},6259:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/use_shape3-663cf51a766aa6fca89d2c05592dedc7.jpg"}}]);