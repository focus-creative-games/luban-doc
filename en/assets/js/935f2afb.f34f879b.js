"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"4.x","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduce","href":"/en/docs/intro","docId":"intro"},{"type":"category","label":"The tutorial","collapsed":false,"items":[{"type":"link","label":"Quick Start","href":"/en/docs/beginner/quickstart","docId":"beginner/quickstart"},{"type":"link","label":"Generate Code and Data","href":"/en/docs/beginner/generatecodeanddata","docId":"beginner/generatecodeanddata"},{"type":"link","label":"Integrate Luban To Your Project","href":"/en/docs/beginner/integratetoproject","docId":"beginner/integratetoproject"},{"type":"link","label":"Runtime loading configuration","href":"/en/docs/beginner/loadinruntime","docId":"beginner/loadinruntime"},{"type":"link","label":"Use Custom Types","href":"/en/docs/beginner/usecustomtype","docId":"beginner/usecustomtype"},{"type":"link","label":"Use Container Types","href":"/en/docs/beginner/usecollection","docId":"beginner/usecollection"},{"type":"link","label":"Column Qualification and Compact Format","href":"/en/docs/beginner/streamandcolumnformat","docId":"beginner/streamandcolumnformat"},{"type":"link","label":"Use Data Validator","href":"/en/docs/beginner/usevalidator","docId":"beginner/usevalidator"},{"type":"link","label":"Use Polymorphic types","href":"/en/docs/beginner/usepolymorphismtype","docId":"beginner/usepolymorphismtype"},{"type":"link","label":"Automatic Table Import","href":"/en/docs/beginner/importtable","docId":"beginner/importtable"}],"collapsible":true,"href":"/en/docs/beginner"},{"type":"category","label":"User Guide","collapsed":true,"items":[{"type":"link","label":"Differences from the classic version","href":"/en/docs/manual/migrate","docId":"manual/migrate"},{"type":"link","label":"design philosophy","href":"/en/docs/manual/architecture","docId":"manual/architecture"},{"type":"link","label":"Features","href":"/en/docs/manual/traits","docId":"manual/traits"},{"type":"link","label":"luban.conf","href":"/en/docs/manual/luban.conf","docId":"manual/luban.conf"},{"type":"link","label":"schema logical structure","href":"/en/docs/manual/schema","docId":"manual/schema"},{"type":"link","label":"configuration definition","href":"/en/docs/manual/defaultschemacollector","docId":"manual/defaultschemacollector"},{"type":"link","label":"Automatic table import","href":"/en/docs/manual/importtable","docId":"manual/importtable"},{"type":"link","label":"Command line tools","href":"/en/docs/manual/commandtools","docId":"manual/commandtools"},{"type":"link","label":"Hierarchical parameter mechanism","href":"/en/docs/manual/cascadingoption","docId":"manual/cascadingoption"},{"type":"link","label":"type system","href":"/en/docs/manual/types","docId":"manual/types"},{"type":"link","label":"type mapping","href":"/en/docs/manual/typemapper","docId":"manual/typemapper"},{"type":"link","label":"Excel Format (Primary)","href":"/en/docs/manual/excel","docId":"manual/excel"},{"type":"link","label":"Excel Format (Advanced)","href":"/en/docs/manual/exceladvanced","docId":"manual/exceladvanced"},{"type":"link","label":"Excel compact format","href":"/en/docs/manual/excelcompactformat","docId":"manual/excelcompactformat"},{"type":"link","label":"Non-Excel data source","href":"/en/docs/manual/otherdatasource","docId":"manual/otherdatasource"},{"type":"link","label":"Code and Data Generation","href":"/en/docs/manual/generatecodedata","docId":"manual/generatecodedata"},{"type":"link","label":"Code Style","href":"/en/docs/manual/codestyle","docId":"manual/codestyle"},{"type":"link","label":"Load configuration","href":"/en/docs/manual/loadconfigatruntime","docId":"manual/loadconfigatruntime"},{"type":"link","label":"data validator","href":"/en/docs/manual/validator","docId":"manual/validator"},{"type":"link","label":"custom template","href":"/en/docs/manual/template","docId":"manual/template"},{"type":"link","label":"data tag","href":"/en/docs/manual/tag","docId":"manual/tag"},{"type":"link","label":"Field Variants","href":"/en/docs/manual/variants","docId":"manual/variants"},{"type":"link","label":"localization","href":"/en/docs/manual/l10n","docId":"manual/l10n"},{"type":"link","label":"Best Practices","href":"/en/docs/manual/bestpractices","docId":"manual/bestpractices"},{"type":"link","label":"Extended Luban implementation","href":"/en/docs/manual/extendluban","docId":"manual/extendluban"}],"collapsible":true,"href":"/en/docs/basic"},{"type":"link","label":"FAQ","href":"/en/docs/help/faq","docId":"help/faq"},{"type":"category","label":"Other","collapsed":true,"items":[{"type":"link","label":"roadmap","href":"/en/docs/other/roadmap","docId":"other/roadmap"},{"type":"link","label":"changelog","href":"/en/docs/other/changelog","docId":"other/changelog"}],"collapsible":true,"href":"/en/docs/other"}]},"docs":{"beginner/generatecodeanddata":{"id":"beginner/generatecodeanddata","title":"Generate Code and Data","description":"Luban not only supports exporting configuration data, but also has built-in support for generating code in multiple languages \u200b\u200bfor runtime configuration loading. At the same time, Luban also supports popular message frameworks such as protobuf, flatbuffers, and msgpack.","sidebar":"tutorialSidebar"},"beginner/importtable":{"id":"beginner/importtable","title":"Automatic Table Import","description":"Add an item to tables.xlsx for each new table, which is a tedious task. In most cases, each Excel file corresponds to a table, and it is possible to let the tool automatically add the table definition.","sidebar":"tutorialSidebar"},"beginner/integratetoproject":{"id":"beginner/integratetoproject","title":"Integrate Luban To Your Project","description":"Install dotnet SDK","sidebar":"tutorialSidebar"},"beginner/loadinruntime":{"id":"beginner/loadinruntime","title":"Runtime loading configuration","description":"We have provided a large number of sample projects under Projects.","sidebar":"tutorialSidebar"},"beginner/quickstart":{"id":"beginner/quickstart","title":"Quick Start","description":"Installation","sidebar":"tutorialSidebar"},"beginner/streamandcolumnformat":{"id":"beginner/streamandcolumnformat","title":"Column Qualification and Compact Format","description":"Like structures and containers, they are data types that contain multiple elements. Luban provides multiple ways (not limited to the following) to read this composite data type:","sidebar":"tutorialSidebar"},"beginner/usecollection":{"id":"beginner/usecollection","title":"Use Container Types","description":"Containers are also the most commonly used types. Luban supports a variety of container data formats, and you can choose the most suitable type and fill it out according to your needs.","sidebar":"tutorialSidebar"},"beginner/usecustomtype":{"id":"beginner/usecustomtype","title":"Use Custom Types","description":"In practice, we often encounter situations where enumerations and custom structures need to be defined. Luban perfectly supports this feature.","sidebar":"tutorialSidebar"},"beginner/usepolymorphismtype":{"id":"beginner/usepolymorphismtype","title":"Use Polymorphic types","description":"Not all data structures are standardized and consistent. In complex Gameplay, there are often many types of buff effects, and the fields of each type are different.","sidebar":"tutorialSidebar"},"beginner/usevalidator":{"id":"beginner/usevalidator","title":"Use Data Validator","description":"In practice, we often encounter a field that needs to be verified for legality. For example, the item_id field must have a valid item table id. Luban supports comprehensive data validation.","sidebar":"tutorialSidebar"},"help/faq":{"id":"help/faq","title":"FAQ","description":"How to specify the primary key","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"introduce","description":"icon","sidebar":"tutorialSidebar"},"manual/architecture":{"id":"manual/architecture","title":"design philosophy","description":"In most people\'s minds, the implementation of configuration tools should be very simple. In fact, you can implement a simple configuration tool with a few hundred lines of code, but it is only usable and far from meeting the various requirements of the configuration workflow in actual game projects.","sidebar":"tutorialSidebar"},"manual/bestpractices":{"id":"manual/bestpractices","title":"Best Practices","description":"Naming Conventions","sidebar":"tutorialSidebar"},"manual/cascadingoption":{"id":"manual/cascadingoption","title":"Hierarchical parameter mechanism","description":"Most of Luban\'s built-in templates use the Cascading Option mechanism, which reduces the module name step by step until the option is found.","sidebar":"tutorialSidebar"},"manual/codestyle":{"id":"manual/codestyle","title":"Code Style","description":"Luban generates code for a language that conforms to the recommended style of the language by default, but sometimes developers want to control the generated code style. Luban","sidebar":"tutorialSidebar"},"manual/commandtools":{"id":"manual/commandtools","title":"Command line tools","description":"Cross-platform","sidebar":"tutorialSidebar"},"manual/defaultschemacollector":{"id":"manual/defaultschemacollector","title":"configuration definition","description":"Luban has a set of Schema logical structure implementation independent of the specific implementation. There is no requirement on how to define the configuration, as long as the final definition can be loaded and parsed into a schema logical structure, it can be processed uniformly. The Luban.Schema.Builtin module provides a default SchemaCollector implementation. If the requirements cannot be met, developers can implement a custom SchemaCollector to suit their own project needs.","sidebar":"tutorialSidebar"},"manual/dynamicbean":{"id":"manual/dynamicbean","title":"polymorphic type","description":"Definition and configuration"},"manual/editor":{"id":"manual/editor","title":"Editor support","description":"GamePlay-related functions often require a custom editor, and the data of a custom editor is often recorded in units, and the data structure is relatively complex, and each record is saved as a separate json file. luban supports this type of editor workflow."},"manual/excel":{"id":"manual/excel","title":"Excel Format (Primary)","description":"Basic rules","sidebar":"tutorialSidebar"},"manual/exceladvanced":{"id":"manual/exceladvanced","title":"Excel Format (Advanced)","description":"Structure used in the example","sidebar":"tutorialSidebar"},"manual/excelcompactformat":{"id":"manual/excelcompactformat","title":"Excel compact format","description":"Introduction","sidebar":"tutorialSidebar"},"manual/extendluban":{"id":"manual/extendluban","title":"Extended Luban implementation","description":"After weighing flexibility and simplicity, luban does not use the plug-in mechanism, but adds some extension projects to the source code project to achieve extension.","sidebar":"tutorialSidebar"},"manual/generatecodedata":{"id":"manual/generatecodedata","title":"Code and Data Generation","description":"Support mainstream game engines and platforms","sidebar":"tutorialSidebar"},"manual/importtable":{"id":"manual/importtable","title":"Automatic table import","description":"Each new table is added to tables.xlsx, which is a tedious task. In most cases, each excel corresponds to a table, and it is possible to let the tool automatically add the table definition.","sidebar":"tutorialSidebar"},"manual/l10n":{"id":"manual/l10n","title":"localization","description":"Multiple localization mechanisms are supported and they can be used simultaneously.","sidebar":"tutorialSidebar"},"manual/loadconfigatruntime":{"id":"manual/loadconfigatruntime","title":"Load configuration","description":"Install Luban.Runtime","sidebar":"tutorialSidebar"},"manual/luban.conf":{"id":"manual/luban.conf","title":"luban.conf","description":"Defines the global configuration required by luban.","sidebar":"tutorialSidebar"},"manual/migrate":{"id":"manual/migrate","title":"Differences from the classic version","description":"Compared with the classic version, the current version greatly simplifies the code implementation and is more convenient for customization. So the code adjustment is huge, but the usage difference is not huge.","sidebar":"tutorialSidebar"},"manual/otherdatasource":{"id":"manual/otherdatasource","title":"Non-Excel data source","description":"Not all configuration data is saved in Excel format. In actual projects, some complex configurations are generated by editors, which are generally saved in formats such as json or xml. luban currently","sidebar":"tutorialSidebar"},"manual/schema":{"id":"manual/schema","title":"schema logical structure","description":"As introduced in the Design Philosophy document, the core of Luban is a complete type system, and the DPP pipeline is the basis for powerful expansion capabilities.","sidebar":"tutorialSidebar"},"manual/tag":{"id":"manual/tag","title":"data tag","description":"Luban supports record-level tag marking, and each data can have 0 or more tags. tag can be used to identify a record as a comment, either to filter the export, or to instruct the validator not to check this record.","sidebar":"tutorialSidebar"},"manual/template":{"id":"manual/template","title":"custom template","description":"Luban uses the scriban template engine to generate code, and also uses this template to generate custom text data files.","sidebar":"tutorialSidebar"},"manual/traits":{"id":"manual/traits","title":"Features","description":"Luban has a wealth of built-in features.","sidebar":"tutorialSidebar"},"manual/typemapper":{"id":"manual/typemapper","title":"type mapping","description":"Sometimes you want to use ready-made struct types directly in the generated code instead of using the generated type code. For example, vector3 is a very common type. After you define vector3 in the configuration, you may want to use UnityEngine.Vector3 instead of the generated vector3 class where the vector3 type is involved in the generated C# code. Luban supports this external type mapping mechanism, which can map configuration classes to external ready-made enum or class types.","sidebar":"tutorialSidebar"},"manual/types":{"id":"manual/types","title":"type system","description":"Luban has a complete type system, especially bean supports type inheritance and polymorphism, so that Luban can easily express any complex data structure.","sidebar":"tutorialSidebar"},"manual/validator":{"id":"manual/validator","title":"data validator","description":"A variety of common data validators are implemented in the Luban.DataValidtor.Builtin module.","sidebar":"tutorialSidebar"},"manual/variants":{"id":"manual/variants","title":"Field Variants","description":"Sometimes the same field may have multiple configurations. A very common scenario is that when making localized data, different regions have different values \u200b\u200bfor a certain initial path.","sidebar":"tutorialSidebar"},"other/changelog":{"id":"other/changelog","title":"changelog","description":"- # change log","sidebar":"tutorialSidebar"},"other/roadmap":{"id":"other/roadmap","title":"roadmap","description":"Subsequent development plan","sidebar":"tutorialSidebar"},"other/tools":{"id":"other/tools","title":"Third-party tools","description":"Unity plugins"}}}')}}]);