"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8961],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,y=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(y,l(l({ref:t},d),{},{components:n})):a.createElement(y,l({ref:t},d))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8589:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},l="Use Container Types",o={unversionedId:"beginner/usecollection",id:"beginner/usecollection",title:"Use Container Types",description:"Containers are also the most commonly used types. Luban supports a variety of container data formats, and you can choose the most suitable type and fill it out according to your needs.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/beginner/usecollection.md",sourceDirName:"beginner",slug:"/beginner/usecollection",permalink:"/en/docs/beginner/usecollection",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Use Custom Types",permalink:"/en/docs/beginner/usecustomtype"},next:{title:"Column Qualification and Compact Format",permalink:"/en/docs/beginner/streamandcolumnformat"}},s={},p=[{value:"Container definition",id:"container-definition",level:2},{value:"Fill in array, list, set data",id:"fill-in-array-list-set-data",level:2},{value:"Fill in map data",id:"fill-in-map-data",level:2}],d={toc:p},c="wrapper";function u(e){let{components:t,...i}=e;return(0,r.kt)(c,(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"use-container-types"},"Use Container Types"),(0,r.kt)("p",null,"Containers are also the most commonly used types. Luban supports a variety of container data formats, and you can choose the most suitable type and fill it out according to your needs."),(0,r.kt)("p",null,"For detailed definition documents, see ",(0,r.kt)("a",{parentName:"p",href:"../manual/schema"},"schema logical structure")," and ",(0,r.kt)("a",{parentName:"p",href:"../manual/types"},"type system"),", and for detailed data documents, see ",(0,r.kt)("a",{parentName:"p",href:"../manual/excel"},"Excel format (primary)")," and ",(0,r.kt)("a",{parentName:"p",href:"../manual/exceladvanced"},"Excel format (advanced)"),"."),(0,r.kt)("h2",{id:"container-definition"},"Container definition"),(0,r.kt)("p",null,"Currently supports 4 basic container types, see ","[Container Type]","(../manual/types#Container Type) for details:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Container Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"Array type, similar to list, but the generated code corresponds to the native array type, such as ",(0,r.kt)("inlineCode",{parentName:"td"},"xxx[]")," in C# language"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"array,int"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"array,string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"array,Color"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"array,Item"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"list"),(0,r.kt)("td",{parentName:"tr",align:null},"List type, similar to array, but the generated code corresponds to the List container type, such as ",(0,r.kt)("inlineCode",{parentName:"td"},"List<xx>")," in C# language"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"list,int"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"list,string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"list,Color"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"list,Item"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"set"),(0,r.kt)("td",{parentName:"tr",align:null},"Set type, requires unique element values, the generated code corresponds to the Set container type, such as ",(0,r.kt)("inlineCode",{parentName:"td"},"HashSet<xx>")," in C# language"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"set,int"),"\u3001",(0,r.kt)("inlineCode",{parentName:"td"},"set,string"),"\u3001",(0,r.kt)("inlineCode",{parentName:"td"},"set,Color"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"map"),(0,r.kt)("td",{parentName:"tr",align:null},"Dictionary type, key is required to be unique, the generated code corresponds to Map type, such as ",(0,r.kt)("inlineCode",{parentName:"td"},"Dictionary<xx,yy>")," in C# language"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"map,int,int"),"\u3001",(0,r.kt)("inlineCode",{parentName:"td"},"map,string,string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"map,Color,int"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"td"},"map,int,Item"))))),(0,r.kt)("h2",{id:"fill-in-array-list-set-data"},"Fill in array, list, set data"),(0,r.kt)("p",null,"There are two common ways to fill in:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Occupy multiple cells, one element in each cell")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Occupy one cell, each element is separated by a separator"))),(0,r.kt)("p",null,"When occupying multiple cells, the field name needs to occupy multiple columns. At this time, you need to merge cells to make the field occupy multiple columns. If you are using a file format such as csv that does not support merged cells, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"[{field name}")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"{field name}]")," in the start and end columns to indicate that this field occupies multiple columns."),(0,r.kt)("p",null,"When occupying a cell, you need to use ",(0,r.kt)("inlineCode",{parentName:"p"},"sep=x")," to specify the separator. The separator can be common characters such as ',', '|', ';', '&', '_', '-', such as ",(0,r.kt)("inlineCode",{parentName:"p"},"sep=,"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"item",src:n(2951).Z,width:"1278",height:"193"})),(0,r.kt)("p",null,"The element type can also be an enumeration or structure type. The figure below only shows the array. The filling method of list and set types is similar."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"item",src:n(6841).Z,width:"1406",height:"181"})),(0,r.kt)("p",null,"You can even fill in multiple lines. As long as '*' is added before the field name, it means filling in multiple lines of data, one element per line. For details, see ",(0,r.kt)("a",{parentName:"p",href:"../manual/exceladvanced"},"Excel Format (Advanced)"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"item",src:n(7214).Z,width:"516",height:"227"})),(0,r.kt)("h2",{id:"fill-in-map-data"},"Fill in map data"),(0,r.kt)("p",null,"The dictionary type contains key and value, so it is more complicated than array and the like."),(0,r.kt)("p",null,"Similarly, map can also be filled in a cell. In order to better distinguish key and value, and to divide each key-value pair, generally map's sep will be filled in 2. The example is as follows:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"item",src:n(232).Z,width:"857",height:"169"})),(0,r.kt)("p",null,"The value type of map can also be a structure type, similar to this:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"item",src:n(489).Z,width:"1370",height:"143"})),(0,r.kt)("p",null,"map can also be filled in multiple lines, as follows:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"item",src:n(8319).Z,width:"831",height:"232"})))}u.isMDXComponent=!0},2951:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/use_list-9c0c728dc4e403625f1b62c04dd9d651.jpg"},6841:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/use_list2-825e82024dedf61964386e2f433ec1eb.jpg"},7214:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/use_list3-8b7ed9a5f3ed0834204c44af6d6d0e5b.jpg"},232:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/use_map-fa7e9e195425fd8511b92dfea680beab.jpg"},489:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/use_map2-bce4de0106a053c50478ccb3a730bb27.jpg"},8319:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/use_map3-bf848e769a2351bcc5171426e4aba165.jpg"}}]);