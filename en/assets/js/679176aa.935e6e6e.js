"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6452],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),m=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=m(a),c=n,f=s["".concat(p,".").concat(c)]||s[c]||u[c]||l;return a?r.createElement(f,o(o({ref:t},d),{},{components:a})):r.createElement(f,o({ref:t},d))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:n,o[1]=i;for(var m=2;m<l;m++)o[m]=a[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},9304:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var r=a(7462),n=(a(7294),a(3905));const l={},o="Code and Data Generation",i={unversionedId:"manual/generatecodedata",id:"manual/generatecodedata",title:"Code and Data Generation",description:"Support mainstream game engines and platforms",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/manual/generatecodedata.md",sourceDirName:"manual",slug:"/manual/generatecodedata",permalink:"/en/docs/manual/generatecodedata",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Non-excel data format",permalink:"/en/docs/manual/otherdatasource"},next:{title:"Code Style",permalink:"/en/docs/manual/codestyle"}},p={},m=[{value:"Support mainstream game engines and platforms",id:"support-mainstream-game-engines-and-platforms",level:2},{value:"Support mainstream thermal solutions",id:"support-mainstream-thermal-solutions",level:2},{value:"Support for popular game frameworks",id:"support-for-popular-game-frameworks",level:2},{value:"Support mainstream game development languages",id:"support-mainstream-game-development-languages",level:2},{value:"Supported Data Formats",id:"supported-data-formats",level:2},{value:"bin-offset format",id:"bin-offset-format",level:3},{value:"The formats supported by different languages are as follows:",id:"the-formats-supported-by-different-languages-are-as-follows",level:2},{value:"generate",id:"generate",level:2}],d={toc:m},s="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(s,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"code-and-data-generation"},"Code and Data Generation"),(0,n.kt)("h2",{id:"support-mainstream-game-engines-and-platforms"},"Support mainstream game engines and platforms"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"unity"),(0,n.kt)("li",{parentName:"ul"},"unreal"),(0,n.kt)("li",{parentName:"ul"},"cocos2d-x"),(0,n.kt)("li",{parentName:"ul"},"godot"),(0,n.kt)("li",{parentName:"ul"},"egret"),(0,n.kt)("li",{parentName:"ul"},"WeChat Mini Game Platform"),(0,n.kt)("li",{parentName:"ul"},"Other small game platforms that support js")),(0,n.kt)("h2",{id:"support-mainstream-thermal-solutions"},"Support mainstream thermal solutions"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"HybridCLR"),(0,n.kt)("li",{parentName:"ul"},"{x,t,s...}lua"),(0,n.kt)("li",{parentName:"ul"},"ILRuntime"),(0,n.kt)("li",{parentName:"ul"},"puerts"),(0,n.kt)("li",{parentName:"ul"},"other")),(0,n.kt)("h2",{id:"support-for-popular-game-frameworks"},"Support for popular game frameworks"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"skynet"),(0,n.kt)("li",{parentName:"ul"},"ET"),(0,n.kt)("li",{parentName:"ul"},"GameFramework"),(0,n.kt)("li",{parentName:"ul"},"QFramework"),(0,n.kt)("li",{parentName:"ul"},"other")),(0,n.kt)("h2",{id:"support-mainstream-game-development-languages"},"Support mainstream game development languages"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"c# (.net framework 4+. dotnet core 3+)"),(0,n.kt)("li",{parentName:"ul"},"java (1.6+)"),(0,n.kt)("li",{parentName:"ul"},"go (1.10+)"),(0,n.kt)("li",{parentName:"ul"},"lua (5.1+)"),(0,n.kt)("li",{parentName:"ul"},"typescript (3.0+)"),(0,n.kt)("li",{parentName:"ul"},"python (3.0+)"),(0,n.kt)("li",{parentName:"ul"},"c++ (11+)\u3002"),(0,n.kt)("li",{parentName:"ul"},"erlang (18+). The classic version is supported by Luban and has not been migrated to the current version yet."),(0,n.kt)("li",{parentName:"ul"},"rust (1.5+). The classic version is supported by Luban and has not been migrated to the current version yet."),(0,n.kt)("li",{parentName:"ul"},"godot. The classic version is supported by Luban and has not been migrated to the current version yet."),(0,n.kt)("li",{parentName:"ul"},"php"),(0,n.kt)("li",{parentName:"ul"},"dart")),(0,n.kt)("p",null,"It is very easy to customize or extend support for new languages."),(0,n.kt)("h2",{id:"supported-data-formats"},"Supported Data Formats"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"In the same format, the data generated for different languages is exactly the same")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"binary format. The format is compact and efficient to load, but basically unreadable. Recommended for official releases only."),(0,n.kt)("li",{parentName:"ul"},"bin-offset format. Record the index position of each record in the data file exported in bin format, which can be used for lazy loading with record granularity|"),(0,n.kt)("li",{parentName:"ul"},"standard json format"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"protobuf")," bin and json"),(0,n.kt)("li",{parentName:"ul"},"flatbuffers json"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"msgpack")),(0,n.kt)("li",{parentName:"ul"},"-lua"),(0,n.kt)("li",{parentName:"ul"},"-xml"),(0,n.kt)("li",{parentName:"ul"},"-erlang"),(0,n.kt)("li",{parentName:"ul"},"-yaml")),(0,n.kt)("h3",{id:"bin-offset-format"},"bin-offset format"),(0,n.kt)("p",null,"Sometimes you don't want to load the entire table directly, but you want to use the record as the granularity, and then load a certain record when you access the record. The bin-offset format records the offset of each record in the bin file in the bin format, so that when a record is accessed, if it is not loaded, the data at the corresponding offset is directly read from the bin file."),(0,n.kt)("p",null,"bin-offset serializes the key and offset information of each record in record order."),(0,n.kt)("p",null,"| record_index 1 | record_index 2| ... | record_index n|"),(0,n.kt)("p",null,"The implementation of record_index k is to serialize all the keys of the record, and then serialize the offset of the record."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"buf. Write(key1);\nbuf. Write(key2);\n...\nbuf. Write(Key N);\nbuf. WriteSize(offset);\n")),(0,n.kt)("p",null,"It can be understood more clearly directly from the source code of bin-offset."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"     // x is the output bin-offset file\n     private void WriteList(DefTable table, List<Record> datas, ByteBuf x)\n     {\n         // buf corresponds to the output bin file\n         ByteBuf buf = new ByteBuf();\n         buf. WriteSize(datas. Count);\n         foreach (var d in datas)\n         {\n             foreach (var indexInfo in table. IndexList)\n             {\n                 DType keyData = d.Data.Fields[indexInfo.IndexFieldIdIndex];\n                 // Serialize each key of the record\n                 keyData.Apply(BinaryDataVisitor.Ins, x);\n             }\n             // The offset of the serialized record\n             x. WriteSize(buf. Size);\n             d.Data.Apply(BinaryDataVisitor.Ins, buf);\n         }\n     }\n")),(0,n.kt)("h2",{id:"the-formats-supported-by-different-languages-are-as-follows"},"The formats supported by different languages are as follows:"),(0,n.kt)("p",null,"In the same language, different codes need to be generated for loading different data formats. That is, the code target and data target must match."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"language"),(0,n.kt)("th",{parentName:"tr",align:"center"},"binary"),(0,n.kt)("th",{parentName:"tr",align:"center"},"json"),(0,n.kt)("th",{parentName:"tr",align:"center"},"lua"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"c#"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"java"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"go"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"lua"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"c++"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"go"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"python"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"typescript"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"php"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"rust"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"godot"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"dart"),(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"protobuf"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,n.kt)("td",{parentName:"tr",align:"center"})))),(0,n.kt)("h2",{id:"generate"},"generate"),(0,n.kt)("p",null,"For details, see ",(0,n.kt)("a",{parentName:"p",href:"./commandtools"},"Command-line Tools"),"."))}u.isMDXComponent=!0}}]);